#!/bin/bash
##More detailed instructions under these guides:  
##https://darkcointalk.org/threads/noob-proof-how-to-install-sgminer-amd-drivers-and-gpu-mine-darkcoin-under-linux-ubuntu-64-bit.1813/  
##http://ubuntuforums.org/showthread.php?t=2243387&p=13117766

####################Define functions and set variables.####################
#Set variable for the NUMBER of the script to run after this one.
next=2
##Functions to set terminal font colors.##
_green() {
	tput setaf 2
}
_blue() {
	tput setaf 4
}
_white() {
	tput setaf 7
}
_bold() {
	tput bold
}
#Function to reset to default color.
_tset() {
	tput sgr 0
}
#Set variable for the NAME of the script to run after this one.
nscript="$(_green)'sgminer$next.in'$(_blue)"
#Function to prompt to reboot.
_rebooty () {
	_blue
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' = &&
	echo "==> $(_bold)$(_white)You need to reboot before continuing.
$(_tset)$(_blue)==> $(_bold)$(_white)Reboot and then run $nscript.
$(_tset)$(_blue)==> $(_bold)$(_white)Reboot now? [y/N]
$(_tset)$(_blue)==> -----------------------------------------------------------"
	read -p "==> " reboot
		case $reboot in
			y|Y)
				echo "$(_bold)$(_white)Rebooting now..."
				sudo reboot
				;;
			*)
				echo "$(_bold)$(_white)Reboot before running $nscript."
				;;
		esac
	_tset
}
#Function to echo [message] in blue.
_echecho () {
	_blue
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' =
	echo -e "$1..."
	printf '%*s\n' "${COLUMNS:-$(tput cols)}" '' | tr ' ' -
	_tset
}
##Function to show ascii splash image in blue.
_darkcoinascii () {
	echo -e "\e[0;34m$1"
	sleep 0.1
}

####################Start script.####################
#Print Darkcoin ascii.
_darkcoinascii '    \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '      \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '        \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '          \\\\\\\\\\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '\\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '  \\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '    \\\\\\\\\\\\\\\\\\   \\\\\\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '      \\\\\\\\\\\\\\\\\\   \\\\\\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '        \\\\\\\\\\\\\\\\\\   \\\\\\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '          \\\\\\\\\\\\\\\\\\   \\                                  \\\\\\\\\\\\\\\\'
_darkcoinascii '            \\\\\\\\\\\\\\\\\\                                    \\\\\\\\\\\\\\\\'
_darkcoinascii '              \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '                \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'
_darkcoinascii '                  \\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\'

#Make sure scripts are under the default (~) directory.
_blue
if [[ $PWD != $HOME ]] ; then
	for n in 1 2 3 4 5 ; do
		mv "sgminer$n.in" ~
	done
fi

#Install general disturibution updates.
_echecho "Updating"
sudo apt-get install aptitude
sudo aptitude update
sudo aptitude upgrade -yr

#Install various dependencies.
_echecho "Installing Dependencies"
sudo aptitude install -yr git curl unzip automake autogen yasm autoconf dh-autoreconf build-essential pkg-config openssh-server screen libtool libcurl4-openssl-dev libtool libncurses5-dev libudev-dev xserver-xorg-core xserver-xorg-video-ati gdebi gedit execstack dh-modaliases lib32gcc1 dkms

#Install 'catalyst' if it is not already installed.
_echecho "Checking current video driver"
_blue
sudo fglrxinfo
if [[ $? =~ "command not found" ]] ; then
	#if YES installed
	_bold
	_green
	echo "Correct driver installed. Awesome."
	_tset
else
	#if NOT installed
    _blue
    sudo sh /usr/share/ati/fglrx-uninstall.sh
    sudo aptitude purge fglrx fglrx_* fglrx-amdcccle* fglrx-dev* xorg-driver-fglrx
	sudo rm /etc/X11/xorg.conf
	sudo aptitude reinstall -yr xserver-xorg-core
	sudo dpkg-reconfigure xserver-xorg
	_tset
	sudo aptitude update
	sudo aptitude upgrade -yr
fi

#Prompt to reboot.
_rebooty